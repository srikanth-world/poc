using System;
using System.Web.Http;

namespace BAML.GMOT.CHILD.Reporting_Web.Areas.GTS.Controllers
{
    [RoutePrefix("api/GTS/Template")] // Define the route prefix
    public class TemplateController : ApiController
    {
        // GET: api/GTS/Template
        [HttpGet]
        [Route("")]
        public IHttpActionResult Index([FromUri] SearchModel<EASTSTemplateCriteria, ApproveItem> model = null)
        {
            // Initialize model if null
            if (model == null)
            {
                model = new SearchModel<EASTSTemplateCriteria, ApproveItem>();
            }

            // Initialize Criteria if null
            if (model.Criteria == null)
            {
                model.Criteria = new EASTSTemplateCriteria();
            }

            // Set default values for UploadFrom and UploadTo
            if (model.Criteria.UploadFrom == DateTime.MinValue)
            {
                model.Criteria.UploadFrom = ReportDate.AddDays(-1);
            }

            if (model.Criteria.UploadTo == DateTime.MinValue)
            {
                model.Criteria.UploadTo = ReportDate;
            }

            // Fetch template infos
            List<CorpFxConfig> templateInfos = ReportManager.GetTemplateInfos(CurrentUser, "Checker");

            // Return JSON response
            var response = new
            {
                Model = model,
                TemplateInfos = templateInfos,
                ReportDate = ReportDate
            };

            return Ok(response);
        }

        // POST: api/GTS/Template
        [HttpPost]
        [Route("")]
        public IHttpActionResult Index([FromBody] SearchModel<EASTSTemplateCriteria, ApproveItem> model)
        {
            if (model == null)
            {
                return BadRequest("Model is required");
            }

            // Initialize Criteria if null
            if (model.Criteria == null)
            {
                model.Criteria = new EASTSTemplateCriteria();
            }

            // Set default values for UploadFrom and UploadTo
            if (model.Criteria.UploadFrom == DateTime.MinValue)
            {
                model.Criteria.UploadFrom = ReportDate.AddDays(-1);
            }

            if (model.Criteria.UploadTo == DateTime.MinValue)
            {
                model.Criteria.UploadTo = ReportDate;
            }

            // Fetch template details
            ReportManager.GetTemplateDetails(model, CurrentUser);

            // Return JSON response
            var response = new
            {
                Model = model,
                ReportDate = ReportDate
            };

            return Ok(response);
        }
    }
}
